version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: openmusic_db
    restart: always
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "5432:5432"
    volumes:
      - openmusic-data:/var/lib/postgresql/data
  
  redis:
    image: redis:7-alpine
    container_name: openmusic_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - openmusic-redis-data:/data
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: openmusic_rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  app:
    container_name: openmusic_api
    build: .
    restart: always
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      # Postgres
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - PGHOST=db
      - PGPORT=${PGPORT}
      # App
      - HOST=${HOST}
      - PORT=${PORT}
      - NODE_ENV=development
      # JWT
      - ACCESS_TOKEN_KEY=${ACCESS_TOKEN_KEY}
      - REFRESH_TOKEN_KEY=${REFRESH_TOKEN_KEY}
      - ACCESS_TOKEN_AGE=${ACCESS_TOKEN_AGE}
      # Redis
      - REDIS_SERVER=redis
      # RabbitMQ
      - RABBITMQ_SERVER=amqp://guest:guest@rabbitmq
      # SMTP
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      # Storage
      - UPLOAD_PATH=uploads/images
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - openmusic-uploads:/usr/src/app/uploads 

volumes:
  openmusic-data:
  openmusic-redis-data:
  openmusic-uploads: